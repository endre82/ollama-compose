### My Open AI Service

networks:
  ai-net:
    external: true
    name: ai-net
    driver: bridge

services:
  traefik:
    image: "traefik:v3.1"
    container_name: "${COMPOSE_PROJECT_NAME}.ai-traefik"
    hostname: "ai-traefik"
    command:
      # - "--log.level=DEBUG"
      # - "--log.level=TRACE"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      ## Entry points for HTTP and HTTPS
      - "--entryPoints.web.address=:89"
      - "--entryPoints.websecure.address=:4443"

      ## Redirect HTTP to HTTPS  (turn off by commenting with # if you what to use OI without SSL/https)
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
    networks:
      - ai-net
    ports:
      - "89:89"
      - "4443:4443"
      - "9880:8080"
    restart: unless-stopped
    volumes:
      - ${DOCKER_VOLUMES_PATH}/traefik_config:/etc/traefik
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "${DOCKER_VOLUMES_PATH}/letsencrypt:/letsencrypt"  # Directory for SSL certificates
    userns_mode: "host"

  open_webui:
    image: "ghcr.io/open-webui/open-webui:main"
    container_name: "${COMPOSE_PROJECT_NAME}.open-webui"
    hostname: "open-webui"
    networks:
      - ai-net
    volumes:
      - "${DOCKER_VOLUMES_PATH}/open-webui:/app/backend/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.open-webui.entrypoints=web,websecure"
      - "traefik.http.routers.open-webui.rule=HostRegexp(`^${HOST_NAME_PATTERN}\\.(${LOCAL_DOMAIN_PATTERN}|${PUBLIC_DOMAIN_PATTERN})$`)"
      - "traefik.http.routers.open-webui.tls=true"  # Comment this line if you what to use OI without SSL/https
      - "traefik.http.routers.open-webui.tls.certresolver=cloudflare"  # Use Cloudflare certresolver
      - "traefik.http.services.open_webui.loadbalancer.server.port=8080"
    restart: unless-stopped
    environment:
      OLLAMA_BASE_URL: "http://${WSL_ETH0_IP}:11434"